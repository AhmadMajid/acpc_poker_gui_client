- matches = matches_including_user
- if matches.length > 0
  - match_id(matches.first.id)

:javascript
  var viewMatch = function(matchId) {
    Realtime.listenForMatchToStart(matchId, "#{match_home_url}", "#{leave_match_url}");
    Realtime.onMatchHasStarted();
    return Realtime.controllerAction(Realtime.matchHomeUrl, {'match_id': matchId});
  };

- rejoin_button_id = 'rejoin'
- spectate_button_id_prefix = 'spectate-'

.match_start
  .matches-in-progress
    %table.table.table-striped.table-bordered
      %thead
        %tr
          %th Matches in Progress
          %th= "#{num_matches_in_progress} / #{ApplicationHelper::MAX_NUM_MATCHES}"
          %th
      %tbody
        - Match.each do |m|
          %tr
            %td= m.user_name
            %td= if m.hand_number then "Hand #{m.hand_number + 1} / #{m.number_of_hands}" else '-----' end
            %td
              / @todo Spectate form
              %form.spectate_form
                - spectate_or_rejoin_label = if user_started_match?(m) then 'Rejoining' else 'Spectate' end
                - spectate_button = {value: spectate_or_rejoin_label}
                - spectate_button[:disabled] = true if user_started_match?(m)
                - spectate_button[:id] = if user_started_match?(m) then rejoin_button_id else "#{spectate_button_id_prefix}#{m.user_name}" end
                %input.btn.btn-secondary{spectate_button}
                :javascript
                  $("##{spectate_button[:id]}").click(function() { viewMatch("#{m.id.to_s}"); });
        - min_num_rows_to_display = 20
        - (ApplicationHelper::MAX_NUM_MATCHES - num_matches_in_progress).times do |i|
          %tr
            %td
            %td
            %td
              %form.spectate_form
                %input.btn.btn-secondary{disabled: true, value: 'Spectate'}
  .play_button_box
    = form_for match, url: new_match_url, remote: true do |f|
      - disabled_label = "Waiting..."
      - play_button_attributes = {data: { disable_with: disabled_label }, class: 'btn btn-primary', value: if num_matches_in_progress < ApplicationHelper::MAX_NUM_MATCHES && !user_already_in_match? then "Play Match!" else "Play Match After #{num_matches_in_progress} Matches" end}
      - if matches.length > 0
        - play_button_attributes[:disabled] = 'disabled'
        - play_button_attributes[:value] = disabled_label
      .form-actions
        = f.submit play_button_attributes

- if matches.length > 0
  - if matches_to_rejoin && !matches_to_rejoin.empty?
    :javascript
      $("##{rejoin_button_id}").click();
  - else
    :javascript
      Realtime.listenForMatchToStart("#{match_id}", "#{match_home_url}", "#{leave_match_url}");
      Realtime.controllerAction("#{enqueue_exhibition_match_url}");