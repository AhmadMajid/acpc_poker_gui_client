:javascript
  Timer.clear();

- matches = matches_including_user
- if matches.length > 0
  - match_id(matches.first.id)

:javascript
  var viewMatch = function(matchId) {
    rt.listenForMatchToStart(matchId);
    return rt.onMatchHasStarted();
  };

- rejoin_button_id = 'rejoin'
- spectate_button_id_prefix = 'spectate-'

.col-sm-12
  .intro-message.panel.panel-success
    .panel-heading
      %h3.panel-title Welcome!
    .panel-body
      %p If this is your first time here, play a match by signing-in with a new user name. Sign-in by clicking on the current user name in the navigation bar. Or, if you would rather watch another person play a match, click on a Spectate button in the table below.

.col-sm-6
  .matches-in-progress.panel.panel-success
    .panel-heading
      %h3.panel-title Matches in Progress
    %table.table.table-striped.table-bordered
      %thead
        %tr
          %th Player
          %th= "#{num_matches_in_progress} / #{ApplicationHelper::MAX_NUM_MATCHES}"
          %th
      %tbody
        - started_and_unfinished_matches.each do |m|
          %tr
            %td= m.user_name
            - hn = if m.hand_number then m.hand_number else 0 end
            %td= "#{hn} / #{m.number_of_hands} hands completed"
            %td
              %form.spectate_form
                - spectate_or_rejoin_label = if user_started_match?(m) then '...' else 'Spectate' end
                - spectate_button = {value: spectate_or_rejoin_label}
                - spectate_button[:disabled] = true if matches.length > 0 || user_started_match?(m)
                - spectate_button[:id] = if user_started_match?(m) then rejoin_button_id else "#{spectate_button_id_prefix}#{m.user_name}" end
                %input.btn.btn-secondary{spectate_button}
                - if user_started_match?(m)
                  :javascript
                    $("##{spectate_button[:id]}").click(function() { viewMatch("#{m.id.to_s}"); });
                - else
                  :javascript
                    $("##{spectate_button[:id]}").click(function() {
                      viewMatch("#{m.id.to_s}");
                      rt.spectate();
                    });
        - (ApplicationHelper::MAX_NUM_MATCHES - num_matches_in_progress).times do |i|
          %tr
            %td
            %td
            %td
              %form.spectate_form
                %input.btn.btn-secondary{disabled: true, value: 'Spectate'}
.col-sm-offset-2
.col-sm-4
  .play_button_box
    = form_for match, url: new_match_url, remote: true do |f|
      - disabled_label = "Waiting..."
      - num_matches_in_queue = Match.unfinished.length
      - num_matches_before_user_can_play = num_matches_in_queue - ApplicationHelper::MAX_NUM_MATCHES + 1
      - play_button_attributes = {data: { disable_with: disabled_label }, class: 'btn btn-success', value: if num_matches_in_queue < ApplicationHelper::MAX_NUM_MATCHES && matches.empty? then "Play Match!" else "Enqueue match (#{num_matches_before_user_can_play} in line)" end}
      - if matches.length > 0 || @enqueue_match
        - play_button_attributes[:disabled] = 'disabled'
        - play_button_attributes[:value] = disabled_label
      - elsif user.name == User::DEFAULT_NAME
        - play_button_attributes[:disabled] = 'disabled'
        - play_button_attributes[:value] = "Sign-in to Play!"
      .form-actions
        = f.submit play_button_attributes

- if @enque_match
  :javascript
    rt.listenForMatchToStart("#{match_id}");
    AjaxCommunicator.sendGet("#{enqueue_exhibition_match_url}");
- elsif matches.length > 0 && matches_to_rejoin && !matches_to_rejoin.empty?
  :javascript
    $("##{rejoin_button_id}").click();