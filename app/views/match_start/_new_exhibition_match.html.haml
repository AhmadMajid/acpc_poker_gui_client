- matches_including_user_ = matches_including_user
- if matches_including_user_.empty?
  :javascript
    rt.finishUpdatingMatchStartWindow();
- else
  - my_match = matches_including_user_.first
  - match_id(my_match.id)
  :javascript
    rt.waitForMatchToStart(
      WindowManager.packageMatchData(
        "#{my_match.id}",
        "#{my_match.last_slice_viewed}"
      )
    );

.row
  .col-sm-12
    .intro-message.panel.panel-success
      .panel-heading
        %h3.panel-title Welcome!
      .panel-body
        %p= "If this is your first time here, play a match by signing-in with a new user name. Sign-in by clicking on the current user name in the navigation bar." + if ApplicationHelper::ENABLE_SPECTATING then " Or, if you would rather watch another person play a match, click on a Spectate button in the table below." else '' end + "The title of your browser tab will alert you that your enqueued match has started by showing the message, \"Match Started!\". When the match starts, you will have #{ApplicationHelper::ACTION_TIMEOUT.to_i} seconds to act before the match will be ended."

- ApplicationHelper::GAMES.each do |game, info|
  .row
    = render partial: match_start_partial('exhibition_match_for_game'), locals: {game: game, info: info, matches_including_user_: matches_including_user_}
