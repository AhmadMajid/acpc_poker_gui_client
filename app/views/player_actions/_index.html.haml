
- unless @hand_ended || @match_ended || @users_turn_to_act
   :javascript
      setTimeout("update_game_state()", 100);
      // @todo Move this out of the view into a javascript helper file?
      function update_game_state() {
         $('#update_match_state_button').submit();
      };

#table
   %ul#information_about_opponents
      - @opponents.each do |opponent|
         %li#information_about_an_opponent
            = render partial: 'player_information', locals: {player: opponent,
               player_with_the_dealer_button: @player_with_the_dealer_button,
               player_who_submitted_small_blind: @player_who_submitted_small_blind, 
               player_who_submitted_big_blind: @player_who_submitted_big_blind,
               player_whose_turn_is_next: @player_whose_turn_is_next,
               hand_ended: @hand_ended}
         
   %ul#community_information
      %li#pot= "Pot Size: #{@pot_size}"
      %ul.board_cards
         - @board_cards.each do |card|
            %li= image_tag "#{card.image_path}", class: 'card'
      %ul#summary_information
         - if @hand_ended
            %ul#hand_results
               %li.title Hand Result:
               - @pot_distribution.each do |player_name, amount|
                  %li= "  #{player_name} won #{amount} chips."
               %li= "Action Summary: #{@action_summary}"
         - if @match_ended
            %li The match has ended, thanks for playing!

   #users_information
      = render partial: 'player_information', locals: {player: @user,
         player_with_the_dealer_button: @player_with_the_dealer_button,
         player_who_submitted_small_blind: @player_who_submitted_small_blind, 
         player_who_submitted_big_blind: @player_who_submitted_big_blind,
         player_whose_turn_is_next: @player_whose_turn_is_next,
         hand_ended: @hand_ended}

%ul#action_dashboard
   %ul.actions
      - fold_is_legal = false
      - @legal_actions.each do |action|
         %li.action
            - case action
               - when 'c'
                  %p= button "Call", call_url, match_id: @match_id, match_slice_index: @match_slice_index, disabled: !@users_turn_to_act
               - when 'k'
                  %p= button "Check", call_url, match_id: @match_id, match_slice_index: @match_slice_index, disabled: !@users_turn_to_act
               - when 'b'
                  %p= button "Bet", raise_url, amount_field: false, match_id: @match_id, match_slice_index: @match_slice_index, disabled: !@users_turn_to_act
               - when 'r'
                  %p= button "Raise", raise_url, amount_field: false, match_id: @match_id, match_slice_index: @match_slice_index, disabled: !@users_turn_to_act
               - when 'f'
                  - fold_is_legal = true
      %li.action
         %p= button "Fold", fold_url, match_id: @match_id, match_slice_index: @match_slice_index, disabled: !(@users_turn_to_act && fold_is_legal)

%ul#match_information
   %li.title= "Match: #{@match.match_name}"
   %ul#game_definition
      %li.title= "Game Definition: #{@match.game_definition_file_name}"
      // @todo %li= "<Game def prop>: <game def val>"
   %li= "This match has #{@match.number_of_hands} hands"
   // @todo %li= "Now playing hand <hand #>/#{@match.number_of_hands}"
   // @todo %li= "Log file: #{RAILS_ROOT + '/' + 'log' + @match.match_name}"
   %ul#chip_balances
      %li.title Chip balances:
      - @chip_balances.each do |player_name, balance|
         %li= "#{player_name}: #{balance}"
   // @todo The submit button is actually displayed so this function may not have the best name
   %li.meta_action
      = hidden_update_state_form @match_id, @match_slice_index, !(@users_turn_to_act || @match_ended)
   %li.meta_action
      %p= button_to "Leave this game", leave_game_url, :remote => true, :confirm =>  "Are you sure you want to leave this game?", disabled: !@match_ended
