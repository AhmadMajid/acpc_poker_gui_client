
.information_container
   %ul#match_information
      %li.title= "Match: #{@match.match_name}"
      %ul#game_definition
         %li.title= "Game Definition: #{@match.game_definition_file_name}"
         // @todo %li= "<Game def prop>: <game def val>"
      %li= "This match has #{@match.number_of_hands} hands"
      // @todo %li= "Now playing hand <hand #>/#{@match.number_of_hands}"
      // @todo %li= "Log file: #{RAILS_ROOT + '/' + 'log' + @match.match_name}"

.information_container
   %ul#information_about_opponents
      - @opponents.each do |opponent|
         %li#information_about_an_opponent
            = render partial: 'player', locals: {player: opponent}
         
.information_container
   %ul#community_information
      %li#board_cards= "Board cards: #{@board_cards}"
      %li#pot= "Pot size: #{@pot_size}"
      %li#round= "Round number: #{@round + 1}"
      - if @match_ended
         %li Match has ended, thanks for playing!

.information_container
   #users_information
      = render partial: 'player', locals: {player: @user}

.information_container
   #action_dashboard
      - if @match_ended
      - elsif @users_turn_to_act
         // Show user actions
         // @todo Change so that buttons are disabled when it isn't the user's turn to act (disabled: true).
         %h2 Actions
         .action
            %p= button "Call", call_url, 'call', match_id: @match_id, match_slice_index: @match_slice_index
         .action
            %p= button "Fold", fold_url, 'fold', match_id: @match_id, match_slice_index: @match_slice_index
         .action
            %p= button "Raise", raise_url, 'raise', amount_field: false, match_id: @match_id, match_slice_index: @match_slice_index
      - else
         // Hidden form to allow AJAX to update the game's state
         // @todo The submit button is actually displayed so this function may not have the best name
         .meta_action
            = hidden_update_state_form @match_id, @match_slice_index
         - if @hand_ended
            #new_hand_available
               %h2 Hand ended.
               // Check if the state can be updated
               = hidden_check_for_new_match_state_form @match_id, @match_slice_index   
               :javascript
                  setTimeout("check_for_new_match_state()", 100);
                  // @todo Move this out of the view into a javascript helper file?
                  function check_for_new_match_state() {
                     $('.check_for_new_match_state_button').submit();
                  };
         - else
            %h3= "Hand ended?: #{@hand_ended}"
            //.updating_match_state
            //   %h3 Updating match state...
            //   :javascript
            //      setTimeout("update_game_state()", 100);
            //      // @todo Move this out of the view into a javascript helper file?
            //      function update_game_state() {
            //         $('.update_match_state_button').submit();
            //      };
      .meta_action
         %p= button_to "Leave this game", leave_game_url, :class => 'leave', :id => 'leave', :remote => true, :confirm =>  "Are you sure you want to leave this game?"
         

