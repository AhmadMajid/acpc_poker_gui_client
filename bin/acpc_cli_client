#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'acpc_dealer'

require_relative '../app/models/match'
require_relative '../app/models/match_slice'

require_relative '../lib/web_application_player_proxy'
require_relative '../lib/application_defs'

class App
  include Methadone::Main
  include Methadone::CLILogging

  change_logger(Logger.new(STDOUT))

  main do |name, game_definition_key, seat, number_of_hands, random_seed, host|
    match = Match.start_match(
      name,
      game_definition_key,
      seat,
      number_of_hands,
      random_seed
    )

    options = [
      # '--t_response ' << @match.millisecond_response_timeout.to_s,
      # '--t_hand ' << @match.millisecond_response_timeout.to_s,
      '--t_response -1',
      '--t_hand -1',
      '--t_per_hand -1'
      # '--t_per_hand ' << @match.millisecond_response_timeout.to_s
    ].join ' '

    # Start dealer
    # options: options,
    # log_directory: MATCH_LOG_DIRECTORY

    # Start bot


    # Start WAPP
    # proxy = WebApplicationPlayerProxy.new(
    #   match.id
    #   AcpcDealer::ConnectionInformation.new(port, host),
    #   seat.to_i - 1,
    #   game_definition,
    #   player_names,
    #   number_of_hands.to_i
    # )

    # while !current_slice.match_ended? do
    #   print 'Your turn to act: '; STDOUT.flush
    #   action = AcpcPokerTypes::PokerAction.new(STDIN.gets.chomp)
    #   proxy.play! action do |patt|
    #     p patt.transition.next_state.to_s
    #   end
    # end

    # # Delete the match
    # Match.delete
  end

  # Declare command-line interface
  description "Command line interface to play in an ACPC match."

  arg :name
  arg :game_definition_key
  arg :seat, :optional
  arg :bot, :optional
  arg :number_of_hands, :optional
  arg :random_seed, :optional
  arg :host, :optional

  version '0.0.1'

  use_log_level_option

  go!
end