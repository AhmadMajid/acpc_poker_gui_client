= Glossary of Terms

[<em>ACPC dealer</em>]
   The program used to deal cards and manage poker
   _matches_.  It is the official program used by the Annual Computer
   Poker Competition to run its matches and was developed by the _CPRG_.

[_action_]
   A method in a _controller_, to which a _route_ is mapped.

[_Apache_]
   A commonly used production-grade web server that is also used by
   this application.

[<em>background server</em>]
   A server to run jobs in background. Background jobs are necessary because a
   TCP socket needs to be persisted in order to communicate with the
   <em>ACPC Dealer</em>.

[<em>Beanstalkd server</em>]
   The background server implementation currently being used to run jobs in
   the background.

[_bot_]
   An automated agent that can play matches against other _competitors_ without
   input from a user.

[<em>Client response</em>]
   A matchstate string with an appended action:
      <some matchState>:{ <limitAction> or <noLimitAction> }

[_competitor_]
   A _user_ or _bot_. A competitor can participate in a match.

[_controller_]
   A class that inherits from +ApplicationController+, contains
   _actions_ that render _views_ to the browser, and delegates business logic to
   _models_.

[_CPRG_]
   The University of Alberta's Computer Poker Research Group.

[_gem_]
   A plug-in-like Ruby library or application that adds
   functionality to another Ruby application.  Gems are listed in +Gemfile+ and
   are installed by running +bundle install+ from within the application
   directory hierarchy.

[_host_]
   A _competitor_ who starts a match by running an instance of the
   <em>ACPC Dealer</em>.

[<em>Javascript template</em>]
   Javascript embedded in an +ERB+ or +HAML+
   format template.  It usually has an +.js.erb+ or +.js.haml+ extension.
   
[_match_]
   A sequence of poker hands managed by the <em>ACPC dealer</em> and played by
   _competitors_.

[<em>match state</em>]
   The state of a _match_. A match state completely describes the match at a
   particular time.

[<em>matchstate string</em>]
   A string from the dealer of the form:
      MATCHSTATE:<position>:<handNumber>:<betting>:<cards>

[_model_]
   A class that works with data from, and provides results to,
   _controllers_.

[<em>partial template</em> or _partial_]
   A snippet of template code
   (+ERB+, +HAML+, etc.)
   that can be inserted into full templates at run time.  By convention, partial
   template files begin with an underscore ('_').

[_participant_]
   A _competitor_ who joins a _table_.

[<em>Phusion Passenger</em>]
   Gem that integrates this rails application 
   with _Apache_.

[_route_]
   A map between URL parameters and _controller_ _actions_.

[_table_]
   The arena upon which _matches_ are held. _Competitors_ participate in matches
   by joining or hosting a table.

[_template_]
   A file that can be interpreted into an +HTML+ page, which can
   be displayed in a browser.  It is usually written in +ERB+ or +HAML+ and is a
   file with a +.html.erb+ or +.html.haml+ extension respectively.
   
[_user_]
   A browser operator. A user can play matches against other _competitors_.

[_view_]
   A set of _templates_ that can be rendered by _controller_ _actions_
   to the browser.

[_worker_]
   A class that inherits from +BackgrounDRb::MetaWorker+
   and is run as on the <em>BackgrounDRb server</em>.  Worker class files are
   stored in +lib/workers/+.
